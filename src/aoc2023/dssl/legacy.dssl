/get { exch .get } macro
/add { exch .add } macro
/set { .set } macro
/remove { exch .remove } macro
/split { exch .split } macro
/unpack { { } foreach } macro
/List .add {
    /this exch def
    this .push
} macro
/containsEq {
    /lst exch def
    /elem exch def
    false
    lst { elem == { pop true break } if } foreach
} macro
/List .indexOf {
    /this exch def
    /elem exch def
    -1
    /i ( 0 this .size ) {
        this i get elem == { pop i break } if
    } for
} macro
/List .lastIndexOf {
    /this exch def
    /elem exch def
    -1
    /i ( this .size 1 - -1 -1 ) {
        this i get elem == { pop i break } if
    } for
} macro