/input "vGFhvGvvSdfwqhqvmCPnlFPnCNPcCFcWcr\nZbWZDMgsTHsrNNLJcJnsJl\nHbBWQgZVZZBzbgZphwjqpmmVfdGmjG\nvvCJLGnthChvtrvCCnRbTRqRPRBtbTRfPRRl\ndjZSgHNNwjqcdWlbcbfc\npFgMSfpMfzMDZFSgSjGJQQnCvMCVLnnJQLGC\ngVhQWQpcWZVwwHVvFvnnnnDFdL\nlzbPlztjltztzSjfGcPdTHLTHFCnnHCLndFGGd\njsNbzbczclttSlfbqlljRQMJRMMpJwRZhspZgJRM\nhLJvfGcNDttSGvJtvSSJcqbqFBBWbjQqDrqbjDDjjb\nlTswlzZdssgFpdPwZpMQnCjngCCjWBQBWWQqng\nPRZMpzPZTdVZTfJvFvLFRctJcf\nJHbQtHVHHLLbTJmmZddgdgwhllMNhhhTgg\nspqpNGDjDPMhCFChMj\nDBSDDGnpSDsDWqWczcvSqWvsBtJJLLZrRVZLJRbBZNVrBHrV\nGwGhfhPhpHccvwSwrTsmsCjDmqTfbDqjss\ntQntQcNRJMFnnVQFFctJqCsRmsTjjbDqDlTqTbWT\nNZdVBZZNFzMFNNNvGprZcLGPGrrpcP\nSvCPLrrlCSvZLrCPPBNPRvNLQBbpmbdggQTTfpfQgpgTqbbb\nHVjHwMVwWtdMGwtwMwdhDFgbJgJqTmFMfFfmmfTTpq\nwhtHVcjDtHWtsWdwVGVHthDPzRrNSsCRLrLRlZNzZSNzNR\nrjrlCCBtbtntwPPt\nFvfJHqBJQWWgWgWLwnMwMLbzvhwTTp\nWqHgWqBFgGfQgHfVdQFfVfrDllSsRSDmVmRCZZmSSSSZ\ngjnppCgGHNPrqqmFnnbr\ntGltVlJRtLRlrqcJcqZDqBJc\nVvhLlvWltWdVltRTLTfgwSjGNHhggQNQNjps\nHDWjCNfQjmwgWhcwPPVbZGcpMb\nsFltFBRRSRJBSSsBlSSnRLPZbVGMVPZpMpPZpcMrFZMc\nBLTBsstlqBRRBSvJJBsHdgdDNHCQHvbdCjQNNW\nlRGzWLZNFwJVbVVGcJ\nHqqpjPvHQnJgVgTnbdTV\nrVvjBQHQrQhCrzlzWrRlDZ\njZjTZRSjZnhGZhzGnG\nHbnPHrCbBDMnhcrVLWWLLWWg\nMBwbCNDDptwNMttjdSnsqSRSFFdjtj\nbSfvcsNsDdccHHQm\nljrlplvBhDHDHHHHJl\njgpzhrzRrvhFRFrzFnWfZtTwSWZPbbqNbsTqsW\nvvCTvcDzHcgtvWjvcDcvgBCgwTdPFPpwpwmTSwwmdPwZpfZh\nrNLMNVqLGNrVsRNJNsPnGnnfnpSFGdfddndd\nVPQsMbVsPbzzvgCzgv\nwPsrqprHQQZsChZn\ncjgFLwWDlDltfLmTCnmWCnZZChCQ\nFccccSLGFwjVlfVLLtgdSPSpMpBMdMBRRdHdBp\nmQQcpmCCprrfLQqZVGqLGv\nPtsJdsMtTTTvFqLTnnqbGZ\nHjldthsHWztJzstZhBcHDDgpNpCpmrpgSD\nlCmhDljDJgWggcnh\nLdQrbdTDQGfGLPdqqFrHwRJcWRHgHBWHBJ\nsLqsGtDqdGQfSTsqtfqqVMzjCzlvllZljNpCsMMl\nCfLCZCCqqHlhSSrrtpRjpL\nmWQbnQZVTWwNdwmDSbpbrFptjDrjRj\nPJWVnTWPVnnclqqBsCCZHP\ntqvtbNCgqJSgZgZvSncrrcGjBGhcnVcR\nDswGQQQdRcjBnRDn\nsMdlFMQQpfZbvlNtZGgN\nRMlPllHtrlrlcZLsZfLcfwdDGD\nQppnQhTBgwQDJsGzLQ\ngTjnmjvphDSNMbtMbtMRHNVr\nRHHcChrVVChCWQmRnMZmnmbTbGmFnqTT\ngpzpfpszDwvDDNdwjdstnSMMHGMqvZnFTTZqbq\nDsDdpfppwHsgJdjzfdDjdssLPlRccPQQrJcchPQWWQRhlQcr\nrsrjQjnRnQZZqMmMMVqs\nWTSTdvJLvTGJTGCMGvzBBpVVqqFVzBzVmf\ntTSJhGLJbJhLJRRbHPQbnHHMrl\nGGgMgBJHWHhLWMhWhgfrhgWLzmsmlzTtzHmsmlszRtszRVlT\nbvScppfcQfcQSFCQpnPqwwTdRTvmzVssvswtddsv\nZDpqnPbQbPPnQbFbfSPSqbQJhGrjgMZBhWLrLrBBBBJWhg\nhQCCGCNhDmGFJsTt\nfcggBBpvBSrtsRTpRmpD\nwflWlBlfnvfWWgMNPPLhPnzhPmLQ\npcGGTvVpcQLLzSPPPpVBVQwngNqgsJqgJgqSngsJMqJg\nRZDFGhtCDGmWfWsNdwJhnMgwswqJ\nZCGjRGjZllFGHvvcTPjPTQpB\nFDVsWrFZnnnfNRJdgBBBMLsJLH\nwcThcTphvCThwTlblpzwGlpLRgHJWLgHLBHdHWJLBLWR\nmwcbPmClwlzlwvvbTmWbQSjZmZSrDnSNVZfVFnZf\ntMlttlFRSrcSFcwQSRwSzrMMPPGGPGLWgNfTNTcLPNPGBPPG\npbZVCDTqnCjVDHnHVnhBPBBbhBhbhgLgmWLh\nqZCJZJqqjjCVvvRQltlzTrJtMMMw\nQvvdBDdMbdFFJrMMjjmjCfCntC\nlHTPsNLPcfVZLnfj\nGgsWpHPpTPWpNsGvgdnDbQRQFRbdQg\njPNwllsVZjhslSjwGShZMdJDmmdmWLtMDDPHMPFd\nQbvpDrbBrtMbbHJmcH\nvznvzBRpBprQBqQZjNswwZDnSlGjZl\nPdNTzLQPLrVMzGcMtt\nFsSvDrvmrwDggHGwgV\nvlpZpZmfnmFTlTWJWdbrdh\nmZmnggMTSJrrmnrbmTbngJMtwPvwzzRvPGhQdGZPGPLvGvRd\nFFVBNHVlFlDfCsWwLwPzzhGPCvzhQv\nqBHLsDcfqFfDDfsFLNcNNBFsrgpMpnJSbnmTnrtmbMSqnpnr\nqjBNwBPNPspqddssbsTsMDhTDrThQb\ngvzZSZzFbgHnrHmn\nfcvfZcRSZFGfZcvFbGttcPfpVjWVwqBqdwNdwNNpqV\nRrTmtTrqznrnRCSqJrWlWDbhWVnfVDVWdclV\nQBBgHQGvHHQswLHQQLGLHdLhfhlZZFlsscVDZfWfDhVlZZ\ndLBMPpGPjLHPHPBHjjgQjHQztSJRztmrNCSCmSpmprrrrz\nHHWJgjjsJrPBWBjgWgDvbbvtbNDNVtttMPPp\nSnLTlhhNSntRVVLFVbbb\nChqdcNTNqqJCrQrQrrBC\nBvfLLngFLDrrlDFDDnGmGlmzqzdGqMMWWwWW\nRVsPbsbVZbjctccCcsCSPmdNqMqMWddwqVzhhNHwHd\ntcsjPZRctZTSbbtSbtsSjZznnJfJBrfJgLvJJDDBvpTrgp\nLJJsNdtJQtbWRJQttjGhjVnjcnzcsczGqj\nMDPPlvCwrTlZfMMvTlPTdVcVhVVjchSBrjccSnnq\nlgZCvTTZfMgHLptdRgmR\ngCDrJRNgJDZRCwMgqGbtVVjTjlFbbTtR\nmccnfcnSQScdvdcQQQpWdnWSjPqTbFFlbPqbPVGNjTPjtN\nNnzmpWmBBzzpzDgwhDghrZrw\nwcbVDBQwVBFQLFQDQcqQcLcJfpHJjmljGgMHfcfgGgjf\nPtnWMtSnlgJmWWmm\nnThPtRnzntstvrtRPqDFLMLdDwBBFLQDBT\nzshqnVqTwqHqZQgZDSZjpFjFFF\nPsBRvttdcgFFBSmc\nGlPsbLtrvrrrtJlCTnVTlwwfnhwVqH\nCvVVnFwWZnZwJZMNlCMNMpbMrrQG\ncpghqzqqtzbGMjTNclGN\nPqLBsgqBsSfBffShVmvRVwWsFpwZVpsn\nLzsLSScvscqNdGdgddQjCDbzhpCDbRbhDpDDwDwt\nZlMBBBnlMFVFHVMJflJjJBfhRnCbCDpRttRPDCbWpCRbpW\nmlrFmJrmscNGmsjm\nFqQjLRjfvTFvlPHHNPMBDDNDPR\nchWptpcWTzBPMsMMMBHW\nzcJghwJZpZcgnctccdzzpGQrbQbblFFlTCCFTbdCFCFq\nQcwNpCcQzpwtCGPPPnrGrfHfvN\nFgjhhhjMVFVjqRRqDBVBqvMZvdrHnPZWZvsnZHdWnv\nShBFhDVghhTBgBBFRRgRCmCPCcpPbwCmLTcCmbpb\nZzlzsBzZnWnsBhFRvfvvLfWqfvMv\nGgQGjjddHHPwpHpTGjPdHMvtvwJqLtJRFlRFRqMwLc\ndgbbdjpGGgTHGGgQgdpmpgblrBrhrhCBSSznChsVhBsmNB\nPhSwPdnpsmSWWcjjDFNqnc\nGJGCTLbTZTrlfflVLFchHDHHDFcVVN\nRhlhrllQZhCsPvRBvMtSvw\nGVgnrgTWGVGjLVjWSpvvNmPTmpQmzvhf\ntBbBDsFtszzSSbPZbh\nBqlqdcqSJtFMdMjWrnGCWRrWGG\nsJVJsQhMhPPSQMwdHRmmsmmwRmsr\nzLFjLDTBFNWWwrqrffldlRdFRq\nBLjzjTpzLpzWGTbQpMJvVMQwQhhMQM\nRqSztDRhJDLmRMLlfvsP\ndMdMMHZCsnbdvmbP\nVHcZVVcZTwTQpgHQcgFMFBpDDzBqqqDhqJSjSjJjSD\nrdMnMGjdHhfnjqWWDJPpGWPtvW\nPTBSQSSzZSBSCzQFFSlZTFSvcZpWWcJvtJppvZpLLcDVcv\nsgQCsBmmlFCPFFzTgTBgdNnrNndnMrrrfbrNjf\nbpZdggTjHbgLglpHjldvHpjdhTVzmhzzzFPzmhFsFQSFnhhN\nrPCDBcCCMPGcWDNNWQzQQSNQnNzQ\nfCCJtDtGGGfGBtGqBrrcfRBcvPwpLgdZZvHdljvqpvdwbpvl\nqpmsNldnlHlCqQlHsHNHwJpJMtwvvvjMvfWjpDtt\nTccVBScrzBzzTGPbVTPQhWjfMjwwRtJtjMtWDWWfDS\nFQFbzBGczGBFLnFmmqsCLg\nqpblblvpvJzStJDrhrnGrdhDfFqf\nggNQNwBgmTcgCBTBTQQjNfDCnZRRRrRGCnrFfdnhrC\nmjVFHQTHNjTwcmpzJzHltltbSssS\nWChWmdcmzndhFcZrrbvrVMVssj\nNQLDlDplpSJGpLfRRMZVBBGjVsGbbjbBZsGv\nQNDfNqlpLgSfNfNgNfpgpqwndwWwnCCnnTFMdHndzn\nZGRPTngTZMSGMGnhSgRjQHsPbqjmsWHQCQWbNN\nBFLLfpzVDBfDdlfQcsbVcNmQsqqbcC\nzFvdplLDLtzFmrrwMMtTrShZ\nnTdmnVCGqTsSBTqv\nHlMPwMlHfPSfBBmFBfSL\ntrHHwRHRwMHPMJQJHnDhbdRhdpCZmChNnd\nlwHWjzplvHqWHGsMLsLwLfgdfLdg\ntPJNPQmQmSGcTtFmctGmSCBgsBBRbLBRVdLVLCBBLgVf\nFPtTPQNPrPPQctTcNPSQJJPDjlzplnGDDjWWplWHhGvpnr\njwvvDbvsRsrrjrfvfrrZsPpCpmPJJPqlqWmzRJRTqq\nHdLttdSQHdLHMMtNdLMSTtHpCmPplWhCzmzmPWlJhlNplP\nBTSLtLLQtnVZDnffbwfw\nsnvQdrtrQprWpgmGLp\nFhzwlwHccBcljFBSDmHmLpgRmPDCffWL\nzFhllqjczzwJqqSqlZMsvJgVNMTbssVNnQbb\ndLZHrWjWPFZWZnPjZttjddFnMDVMGJMQqvMVGVRVpjVpGVvv\nzhzTwTlfTwCsShSgNhfzsQQqvMQStQMDGJJGvGQVvq\nTTwCBfsfBwhzwTBCzlmHZdLmBBbtLnLbFnnF\nBhBRLFmlBlmhgShHmhSlZlFgvbQNwvcsvMCcsQCwNQvNMsBw\nttWddDjrfjDcssscDbvH\njfjfPWdzdfjdnWpjtrzqnhmJGJFhSJRHSmSmlqlHmq\nQvJTgvsvghHRHHNbZvNZTRSzBBCLrDqzrfDDtJSqSLBC\ncPPwdcFFPDwfFrBrFfFfrC\nnppwdplpRvllsgDH\nBGLLWLLwHVZwHnNhwsMsrqMqhh\nSTlTpDpmjzmjjjgccqdsbNbBhlNnNMhsqs\npjmgjfSDSzmSgFzRZQfRRZLBVLVtZZ\nWHjddztMtVLNNFFTmbFPFPRw\nbJnvpQfqccQJZfpcbvCphcFGDPFGRwDGDDGwGsmPFnPF\nrvffQJZJqrpZCJZJQrQpvBvStlSWSzVSWBbzBLzjtjWWWj\nSJFMSMGSDLTsFgHvHL\nmNzRrRRzjzqqgPHvLTHjlvWg\nZLbRpRnRnCrbmnmrRRNnwbGfMwDwfDDdSVMdVJdd\nnsqTbhcDssPsPWsnchPJMSTSMmJMwTSTCJJfJw\nDHvFvvdHpvpGFHDMVVJVplCCVpggCl\nRdQjtvHtDQNGsZqzcqPqbNcq\nGFzRjczzQJnLjJvvTj\nmSfHrNHDzHDrDSSSBvTZLTNqWJWBWLlv\nPfgCmfPzDVrtHsddVMsRFcVFQM\nsfBgfBfBsHBHFGhsqfjgQZtQQMdZgbZQptbM\nrNLRSzRTrrvvLSTWGpjpNZdQPtGtMdNM\nwvSWLwzTGTCcwwwJwvwcrcRcVfFBqhhVhDqhBllBfFqBCDCs\nLbTpDTcMTSzzMLhScnDnSppNQwVNZFBVnFsrwQQZrQrQrN\ntJtJCRlGWljGWCtjJZVPsJBsVwQmrQNN\nfvHRftqjGfWGwtfGqvLTzDTzzzchSbMDTd\nJJhWZlhqLDHtBDrqrB\nbwwmfrSmbmFjVSFQwSdpDvGdpPnRvDtHpGtGPG\nVgFfcSQfFgmLLrNThllTZc\nQmfvrpnvrrJGnBSCFTBMSWFS\nNVMggbVPzCTgDFDD\nNRqHRZjVRZdRVdZwNPrMrchGhGpcGfvhQlHJ\nnlBdCldndlZTttSSBBccPfGWLLHcTTcWPbbW\njpsFzFmzDzNzDGChGcGGmPQHQf\nCNzqvvVJNFqvgRtlqRtdnwSZ\nMJtDbNHDDpmVPJVzzjLm\nRslhvlfRTWvWWRwfllSZngmggznjSPznLjmSnz\nTlhffRwWQhChDqbBQLFHqNrb\nHWnmSbzflWltlzLfWWDzjMBvCjjCTCgcMvzBBB\nqRRRZJwhZFGdRNfghVjMVVgfcghC\nQFFqwNNNwdNZZpqqZfnDSHmmlDLtWtHWlQmD\nJrFdNTTLRBTJrFVrBNdVLFBdlHbzQQsQzbPJtpbtltWsHbQw\ngZffDfMlCfjCSqMcpHPWHszstzHjQwpb\nGMnvfGlfvSqvcMMDgDDcfnqSVFRdmTmVdNBTdmRmBFVnLLBT\nZvRHtDcZntLZssMssQBrMdnC\njglqlVdlbqgVWjJMbrrBCpmQBBfrpm\nGqVVPPjPNjFVllNjJjFDvzTLZRvcLRLvTGdGDv\nfDVzvVfzzZPMsMbb\nLHtBwLBdhFgdHLLthRwFGGMsmrHMmmbZSmqbMGGG\nbblRwbTRlllfVQnCQn\nfVZzjRzpzpVCRPZhVWQvvLsWWWFQlmjWmG\nJDHgJdtwbZqJqsWBBDLlQlvLms\ncHHtdbqwrqbbtSbTgSTcVCMRZnRRVNhVPNMPpfMc\nfCMPBBdpMpsqMssQccnV\nTlwGWDjDZHLjZHHlLGmnlnNcRllsJcqtsJRV\nZHhZHThLLrGwjDDjLwGWWWSjPpbpzrvBFBFdBBbqvCbpFfpg\nbvDfDPtCVfFFVdWWpmLRmzWzzdBW\njgZTghhjrGrsswrsghHrlgTGzSRmMLwpJMSMzWLLWRzpRRSc\nlpjTpGHlpsNGTHllHrCFnDNPtVnvfQtQtQNP\nBwlQcwZBwwwQNqJTrrsRGCDTNt\nbMpVPSfRvCbCtTqsCs\ndPSRfRpPPjjmLMgZBZBLZZwFQnZn\nTsVfggTqVnsLVTdTpmDdRhwPRtPRDRwD\nljHBSWZvvFWvBFPppnQPwnpmzR\nMSHSjbBclBSjccLJgqgnLVqTbsTT\nzncfVgRzVJgnTfVqNHvZJZNJNMpHbdvH\nPCBpsLjPPmMGdHNdHBHZ\njSLlrhLPDWLrPrDCLPCfnpzcVRFcRTnlVncntT\nccvSgjHtRjcjSvjvSrBjzSHHwnJPbgwPPZVVVZnPpZlpwnlT\nffqNqGGsGWqLTNqZwdndPnnJJpZVJW\nsNmqhsCMQsMTmjrcmrHrRj\ngWWWzNVJDwDzVWVDGbGNnhTnHLsmhmhfsQTNSmHd\nvtMPZvrZvqtqBHljrqSnnmTfLfdnQsjhjmhL\nMMPZPBqZCrBtvZcrBlDbGbbbzHJCbbRwgwDz\nhGSRhsMswhcNNGwhwncMnCqCJNrHJPJJrJtCJdqHJm\nBgVTzWBdTfCmfCJH\ndlbVFvvWVZhSRQDMnlhc\nWfpzBZmgJlQVGvWF\nwHSbrHwmccnrmrHsClGqFGbQjQjjQJQQGv\nSHPwwsRcrrNtrNSsphmZLzpfzhghZPdD\nDFDPRpmgbPQtmgBBQDDNJTMMBZsqsZGqGZTGCGSqWG\nfVvVVLcJVzlvzhqfSTCsZsMGMHqq\nzJdrrdnzcLlwczwbQmQngRDQPbtDpQ\nHDZZrpFqwRrQfBqhjjlVlQ\nczTgvvWPNgPGcTlsQflCVshClC\nPgNvtSJNvGVMMzNzgGvPGGLHFDdFdmZSZRdDdRrmpFwL\nSVHNVFVPBHJqHhgFCgzLmCwppm\nDvDdsGZljDlfdZnjnnZGMzLpRgLfMCLmzfPLhmgp\njZDZlrvrZTrTrTQrDsjslHNJqtWbWHbqbPBWNVQWBJ\nNmGGBdWWJDJTTZHm\nhFVhcqFjncpcppSjqfppqDvzDDDbbDZvDZZbHfJgvJ\njrPqnnHnqSPwPGWPdWst\nBfhbwMwbbPbHPPPlrdJjrlMJLrJVTd\npnQnGnWDjnJdlJCh\nqshsWvpttzNNQDtzRRPvwfcPHBBBHwbw\nSHzGRQjhwwhGzjjwRjfBqpqbNCqNnnqqQqPlQC\nTZtgLmZgVmgdFgmZtdrbNqnqlNlpblnlrnBd\nDvgmvvZgmWJJjwHHhJSzps\nJjlrlJjPJgDjJjJnDRDjNwGGqMvSddvPvwQddqSVvq\nSLpphFLhFZhWLzvswwWqsqVVQWdv\nFSHtTLZpfzRDDrJgRNjT\nwjCMvrMlqqWHvWqddrHqgnBNhcffthhVLtpgLBnw\nGbQFZzZZphnpgNZV\nFhFzRTDRPzsRQGQGTFlllrJHjdsJlHMqjjHr\nLqDcTbmJcqSJSTmnrTcmJrfffplfjZsGZfGGZfQLdplj\nhWddgBvzWFZfPsQlGh\nRBWBRCdHtgHttVVzHBVNNNDwSTDcSSSbScDDwbwbnmRS\nFFPzwlZVVrzFFlFLVlllZdHCHPQMnJQQbhhChdhCbb\nBRRqGBgRfqvgvBDDDTRgghNCMMTQNNbVJMNJJdbbdT\nDfpgjGfsRWrFVzwLcs\nPMTSdSmFjhFpNTqvppvRBrRBrDqB\nHnZZznJbzGZGlZtZWHlJGcGcwMvQBsrwRDQvcDgrgDgrqRvq\nHGlGfnJZfMMCfNhm\nnRssqlqVRppVwdMMQwFgtRFz\nsmTvLLTvvNLtwMMQNg\nCmPGBvZGWvBSGGDmTZjZlhpJcpHDJsbDnlrrprpl\ndjcQGNQqdGdGqMCgndwgCLDMgW\nnvBvHpBppnvPPnJTBWLJVMwVfWJfCbfWgW\nhsHHpBsvRTHpsPszTBTTsRTslGqGqlcqlScnqmhZmmZSZSjl\nDddBHCmfWCBTDBHTHfMpzhzpJJMJsFrGrz\ntPVPmbnttjPnZvSvSbnmZPZPNpNGMpJNzzNrGJpvhsshMpFs\nmwnZcbmmStbVtVjbZVlcLTBlcLCRHRDWCWWW" def
/split {
    /sep exch def
    /str exch def
    /s "" def
    [ str tuple {
        /chr exch def
        chr sep == {
            s /s "" =
        } {
            /s s chr ~ =
        } ifelse
    } foreach s ] tuple
} def
/contains {
    /chr exch def
    /str exch def
    /result false def
    str tuple {
        chr == result not & {
            /result true =
        } if
    } foreach
    result
} def
/indexof {
    /chr exch def
    /str exch def
    /result -1 def
    /i 0 def
    str tuple {
        chr == result -1 == & {
            /result i =
        } if
        /i ++
    } foreach
    result
} def
/prior {
    "~abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" exch indexof exec
} def
/score 0 def
input '\n' split exec {
    tuple dup size /siz exch def
    dup /comp1 exch [ exch unpack [ siz 2 / ] range { pop pop } foreach ] tuple def
    /comp2 exch [ exch {
        siz 2 / 0 > {
            pop
            /siz 2 -=
        } if
    } foreach ] tuple def
    /common ' ' def
    comp1 {
        dup
        comp2 exch contains exec {
            /common exch =
        } { pop } ifelse
    } foreach
    /score common char prior exec +=
} foreach
score println
/score 0 =
input '\n' split exec dup size 3 / /siz exch def unpack
[ siz ] range {
    pop
    /common ' ' def
    /rc1 exch tuple def
    /rc2 exch tuple def
    /rc3 exch tuple def
    rc1 {
        dup dup
        rc2 exch contains exec exch rc3 exch contains exec & {
            /common exch =
        } { pop } ifelse
    } foreach
    /score common char prior exec +=
} foreach
score println